@model EventManagement.DataModels.PurchaseDTO

@{
    ViewBag.Title = "DiscountReg";
    Layout = "~/Views/Shared/Layouts/_Layout.cshtml";
}

<div class="NotHome NoBg">
    <h2 class="header">Registration</h2>
    <div id="over" style="">
        <img class="img-responsive" src="@Url.Content("~/Content/images/Registration_FlowChart.png")" alt="slider" />
    </div>
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "RegistrationForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="registration">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.RegTypeId)
            @Html.HiddenFor(model => model.RegClassId)
            @Html.HiddenFor(model => model.ItemDescription, new { Value = "Conference Discount Registration" })
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.DropDownListFor(model => model.ConferenceId, new SelectList(@ViewBag.Conferences, "Id", "Name"), "Select Conference", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConferenceId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control", @placeholder = "Organization/ Institute" } })
                            @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.TextAreaFor(model => model.Address, new { @class = "form-control txtArea", @placeholder = "Billing Address" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-6">
                            @Html.DropDownListFor(model => model.CountryId, new SelectList(@ViewBag.Countries, "Id", "Name"), "Select Country", new { @class = "form-control", onchange = "getCountryCallingCode()" })
                            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-2">
                            <input id="callingCode" class="form-control" readonly="readonly" />
                        </div>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.TextAreaFor(model => model.RegDescription, new { @class = "form-control txtArea", @placeholder = "Descibe the registraion. Ex: Only Registration, Registration and Accommodation, Exhibitor/Sponsor and etc." })
                            @Html.ValidationMessageFor(model => model.RegDescription, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    <label class="control-label col-md-offset-1 col-md-10" style="text-align:left">Price in $(Please type the amount you are asked to pay)</label>
                    <div class="col-md-offset-1 col-md-10">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @placeholder = "Amount" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                    </div>
                </div>

            
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.CheckBoxFor(model => model.TermsAndConditions, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.TermsAndConditions, new { @class = "pointer txthighlight", @onclick = "loadPartial()" })
                        </div>
                        <div class="col-md-offset-1 col-md-10">
                            @Html.ValidationMessageFor(model => model.TermsAndConditions, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="ol-md-12">
                    <div class="col-md-6" style="text-align:right">
                        <input type="button" value="Register" class="push-btn" onclick="postRegistration()" />
                    </div>
                    <div class="col-md-6">
                        <img style="height:100px" class="img-responsive" src="@Url.Content("~/Content/images/banner_paypal.jpg" )" alt="slider">
                    </div>
                </div>
            </div>
        </div>
        <div class="sub regpolicy">
            <div class="sub">
                <p class="q">Registration Includes</p>
                <div class="sub">
                    <p><i class="fa fa-circle" aria-hidden="true"></i>Access to main conference sessions, exhibits, poster sessions and round table discussions.</p>
                    <p><i class="fa fa-circle" aria-hidden="true"></i>Conference ID cards &  Proceedings (Hard Copy) provided at venue.</p>
                    <p><i class="fa fa-circle" aria-hidden="true"></i>Lunch, refreshments and two coffee breaks during the conference.</p>
                    <p><i class="fa fa-circle" aria-hidden="true"></i>A free paper abstract(For Speakers).</p>
                    <p><i class="fa fa-circle" aria-hidden="true"></i>Certificate of Presentation.</p>
                    <p><i class="fa fa-circle" aria-hidden="true"></i>Access to cocktail party for  one to one discussion .</p>
                    <p><i class="fa fa-circle" aria-hidden="true"></i>WiFi in meeting rooms.</p>
                </div>
            </div>
            <div class="sub">
                <p class="q">Accommodation Includes</p>
                <div class="sub">
                    <p><i class="fa fa-circle" aria-hidden="true"></i>Breakfast during your stay.</p>
                    <p><i class="fa fa-circle" aria-hidden="true"></i>Car parking will be provided.</p>
                    <p><i class="fa fa-circle" aria-hidden="true"></i>Free access to Swimming pool .</p>
                </div>
            </div>
        </div>
                                        }
    <div id='myModal' class='modal'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>
    <div id="RegFormHolder"></div>
</div>
<script type="text/JavaScript">
    $('body').removeClass('fixedBg');
    function getCountryCallingCode(){
        var countryId = $("#CountryId").val();
        if(countryId == undefined || countryId == ""){
            $("#callingCode").val('');
            return;
        }
        if(countryId != undefined ){
            var url = "@Url.Content("~/Shared/GetCountryDetails")";
            $.ajax({
                type: 'POST',
                contentType: false,
                processData: false,
                url: url + '/' + countryId,
                success: function (response) {
                    $("#callingCode").val('+' + response.CallingCode);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    toastr.error('Country Calling Code not found')
                },
            });
        }
    }
    function postRegistration() {
        //if(parseInt($("#Amount").val()) == 0){
        //    toastr.error("Please select what you want to Register for");
        //    return;
        //}
        //if($("#RegTypeId").val() == 0){
        //    toastr.error("Please select what you want to Register for");
        //    return;
        //}

        if($('#RegistrationForm').valid()){
            spinner(true);
            var data = new FormData();

            data.append("conferenceId", $("#ConferenceId").val());
            data.append("name", $("#Name").val());
            data.append("Organization", $("#Organization").val());
            data.append("Address", $("#Address").val());
            data.append("EmailId", $("#EmailId").val());
            data.append("CountryId", $("#CountryId").val());
            data.append("PhoneNumber", $("#PhoneNumber").val());
            data.append("Amount", $("#Amount").val());
            data.append("RegTypeId", null);
            data.append("RegClassId",null);
            data.append("ItemDescription", $("#ItemDescription").val());
            data.append("RegDescription", $("#RegDescription").val());

            var url = "@Url.Content("~/Conference/RegistrationSubmit")";

            $.ajax({
                type: 'POST',
                contentType: false,
                processData: false,
                url: url,
                data: data,
                success: function (response) {
                    spinner(false);
                    var options = { "backdrop": "static", keyboard: true };
                    $('#myModalContent').html(response);
                    $('#myModal').modal(options);
                    $('#myModal').modal('show');
                    //$('#RegFormHolder').html(response);
                    //document.hiddenRegform.submit();
                    //window.location.href = response.Url;
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    toastr.info('Something went wrong!!')
                    spinner(false);
                },
            });
        }else{
            toastr.warning('Please fill in all the mandatory fields!!')
        }
    }

    function loadPartial() {
        spinner(true);
        var options = { "backdrop": "static", keyboard: true };
        var url = "@Url.Content("~/Conference/ModalRegistrationPolicy/")";
        $.ajax({
            type: "GET",
            url: url,
            contentType: "application/json; charset=utf-8",
            //datatype: "json",
            success: function (data) {
                spinner(false);
                $('#myModalContent').html(data);
                $('#myModal').modal(options);
                $('#myModal').modal('show');

            },
            error: function () {
                $('#myModalContent').html("Error fetching Registration Policy");
            }
        });
    }

    $(document).ready(function () {
        processNoScroll();
    });

    $.validator.unobtrusive.adapters.add("checkboxtrue", function (options) {
        if (options.element.tagName.toUpperCase() == "INPUT" && options.element.type.toUpperCase() == "CHECKBOX") {
            options.rules["required"] = true;
            if (options.message) {
                options.messages["required"] = options.message;
            }
        }
    });

    $.validator.unobtrusive.adapters.add('filesize', ['maxsize'], function (options) {
        options.rules['filesize'] = options.params;
        if (options.message) {
            options.messages['filesize'] = options.message;
        }
    });

</script>

