@model EventManagement.DataModels.AbstractSubmitDTO
@{
    ViewBag.Title = "Abstract Submit";
    Layout = "~/Views/Shared/Layouts/_ConferenceLayout.cshtml";
}
<div class="NotHome">
    <div class="row">
        <div class="col-md-8">
            <h2 class="heading">Submit Abstract</h2>
        </div>
        <div class="col-md-4 sampleAbstract">
            <button class="push-btn btn--sm push-btn--blue flRt" onclick="dwnldSampleAbstract()"><text><i class="fa fa-download" aria-hidden="true"></i>  Sample Abstract</text></button>
        </div>
    </div>
    @using (Html.BeginForm("SubmitAbstract", "Conference", FormMethod.Post, new { encType = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ConferenceId, new { Value = @ViewData["ConferenceId"] })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-horizontal" style="padding:20px">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.DropDownList("Title", new SelectList(@ViewBag.Titles, "Id", "Name"), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.EmailId) } })
                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.Telephone) } })
                            @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.DropDownListFor(model => model.Track, new SelectList(@ViewBag.Tracks, "Id", "Name"), "Select Scientific Sessions", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Track, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.SubmittedBy, new { htmlAttributes = new { @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.SubmittedBy) } })
                            @Html.ValidationMessageFor(model => model.SubmittedBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.Organisation, new { htmlAttributes = new { @class = "form-control", @placeholder = @Html.DisplayNameFor(m => m.Organisation) } })
                            @Html.ValidationMessageFor(model => model.Organisation, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.DropDownListFor(model => model.Country, new SelectList(@ViewBag.Countries, "Id", "Name"), "Select Country", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.DropDownListFor(model => model.Category, new SelectList(@ViewBag.Categories, "Id", "Name"), "Select Interested In", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.DocUpload, htmlAttributes: new { @class = "control-label col-md-offset-1 col-md-3" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.DocUpload, new { type = "file" })
                            @Html.ValidationMessageFor(model => model.DocUpload, "", new { @class = "text-danger" })
                            @*<input type="file" id="upFiles" class="btn" />*@
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-5 col-md-7">
                        <input type="submit" value="Submit" class="push-btn" onclick="spinner(true)"/>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    $(document).ready(function () {
        processNoScroll();
    });
</script>
