@model EventManagement.DataModels.PurchaseDTO

@{
    ViewBag.Title = "registration";
    Layout = "~/Views/Shared/Layouts/_ConferenceLayout.cshtml";
}
<div class="NotHome NoBg">
    <h2 class="header">Registration</h2>
    <div id="over" style="">
        <img class="img-responsive" src="@Url.Content("~/Content/images/Registration_FlowChart.png")" alt="slider" />
    </div>
    @using (Html.BeginForm("test", "conference", new { name = "form1" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="registration">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control", @placeholder = "Organization/ Institute" } })
                            @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.TextAreaFor(model => model.Address, new { @class = "form-control txtArea", @placeholder = "Billing Address" })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-6">
                            @Html.DropDownListFor(model => model.CountryId, new SelectList(@ViewBag.Countries, "Id", "Name"), "Select Country", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CountryId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="table-responsive" id="regTab">

                @*<div class="row">
                        <h2>Register For</h2>
                    </div>*@
                <table class="table">
                    <colgroup>
                        <col />
                        <col />
                        <col />
                    </colgroup>
                    <thead>
                        <tr>
                            <th>
                                REGISTER FOR
                            </th>
                            @{
                                foreach (var pricetype in @ViewBag.RegClasslst)
                                {
                                    string[] stringSeparators = new string[] { "[split]" };
                                    var splits = pricetype.Name.Split(stringSeparators, StringSplitOptions.None);
                                    <th>
                                        @{
                                            for (var i = 0; i < @splits.Length; i++)
                                            {
                                                @splits[i]
                                                <br />
                                            }
                                        }
                                    </th>
                                            }
                            }
                    </thead>
                    <tbody>
                        @{
                            foreach (var regtype in Model.Reg)
                            {
                                <tr>
                                    <td>
                                        @regtype.Name
                                    </td>
                                    @{
                                        foreach (var pricetype in regtype.PricingTypes)
                                        {
                                            var htmlAttr = new Dictionary<string, object>();
                                            htmlAttr.Add("class", "regpricec");
                                            htmlAttr.Add("data-val", pricetype.Price);
                                            htmlAttr.Add("onClick", "calculateTotal()");
                                            if (!pricetype.IsActive)
                                            {
                                                htmlAttr.Add("disabled", "disabled");
                                            }
                                            <td>
                                                @Html.RadioButton("regprice", false, htmlAttr) @pricetype.Price
                                            </td>
                                        }
                                    }
                                </tr>
                                        }
                        }
                    </tbody>
                </table>

                <div class="row">
                    <div class="col-12 sub">
                        @Html.CheckBox("accompany", new { data_val = 200, @class = "", @onClick = "calculateTotal()" })
                        <label>Accompany A Person to Conference ($200) ?</label>
                    </div>
                </div>

                @*<div class="row">
                        <h2>Accomodation Prices</h2>
                    </div>*@
                <table class="table">
                    <thead>
                        <tr>
                            <th>
                                ACCOMODATION PRICES
                            </th>
                            <th colspan="1">
                                Single Occupancy
                            </th>
                            <th colspan="1">
                                Double Occupancy
                            </th>
                            <th colspan="1">
                                Triple Occupancy
                            </th>
                    </thead>
                    <tbody>
                        @{
                            foreach (var regtype in Model.acc)
                            {
                                <tr>
                                    <td>
                                        @regtype.Name
                                    </td>
                                    @{
                                        foreach (var occtype in regtype.occ)
                                        {
                                            var htmlAttr = new Dictionary<string, object>();
                                            htmlAttr.Add("class", "accpricec");
                                            htmlAttr.Add("data-val", occtype.Price);
                                            htmlAttr.Add("onClick", "calculateTotal()");
                                            if (!occtype.IsActive)
                                            {
                                                htmlAttr.Add("disabled", "disabled");
                                            }
                                            <td>
                                                @Html.RadioButton("accprice", false, htmlAttr) @occtype.Price
                                            </td>
                                        }
                                    }
                                </tr>
                                        }
                        }
                    </tbody>
                </table>

                <div class="col-12 txtctr" style="padding:20px">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label>Total Price($)</label>
                        </div>
                    </div>
                    <div class="col-md-6 txtctr">
                        <div class="form-group">
                            <label name="price" id="lblTotalPrice"></label>
                        </div>
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <div class="col-md-offset-1 col-md-10">
                            @Html.CheckBoxFor(model => model.TermsAndConditions, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.LabelFor(model => model.TermsAndConditions, new { @class = "pointer txthighlight", @onclick = "loadPartial()" })
                        </div>
                        <div class="col-md-offset-1 col-md-10">
                            @Html.ValidationMessageFor(model => model.TermsAndConditions, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-5 col-md-7">
                    <input type="submit" value="Register" class="push-btn" />
                </div>
            </div>
        </div>
                                        }
    <div id='myModal' class='modal'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div id='myModalContent'></div>
            </div>
        </div>
    </div>
</div>
<script type="text/JavaScript">
    function loadPartial() {
        spinner(true);
        var options = { "backdrop": "static", keyboard: true };
        var url = "@Url.Content("~/Conference/ModalRegistrationPolicy/")";
        $.ajax({
            type: "GET",
            url: url,
            contentType: "application/json; charset=utf-8",
            //datatype: "json",
            success: function (data) {
                spinner(false);
                $('#myModalContent').html(data);
                $('#myModal').modal(options);
                $('#myModal').modal('show');

            },
            error: function () {
                $('#myModalContent').html("Error fetching Registration Policy");
            }
        });
    }

    //$('.modal').click(function (e) {
    //    e.stopPropagation();
    //});
    $(document).ready(function () {
        processNoScroll();
        calculateTotal();
        //disable_radio();
        //retriveRegPrice();
        //retriveAccPrice();
        //getAccompanyPrice();
    });

    function calculateTotal() {
        var regprice = 0;
        var accompanyprice = 0;
        var accomodationPrice = 0;

        $.each($('.regpricec'), function () {
            if ($(this).prop('checked'))
                regprice = parseInt($(this).attr('data-val'));
        });

        if ($('#accompany').prop("checked"))
            accompanyprice = parseInt($('#accompany').attr("data-val"));

        $.each($('.accpricec'), function () {
            if ($(this).prop('checked'))
                accomodationPrice = parseInt($(this).attr('data-val'));
        });

        //var accomodationPrice = parseInt($('#lblAccPrice').prop('data-val'));
        //var accompanyprice = parseInt($('#lblAccompanyPrice').prop('data-val'));
        //var regprice = parseInt($('#lblRegPrice').prop('data-val'));
        var res = regprice + accompanyprice + accomodationPrice;
        var total = { val: res, txt: "$ " + res };
        $('#lblTotalPrice').text(total.txt);
        $('#lblTotalPrice').prop('data-val', total.amt);
    }

    function retriveRegPrice() {
        var regtypeId = $('#RegTypeId').val();
        var regClassId = $('#RegClassId').val();
        var url = "@Url.Content("~/Conference/GetRegPrice")";
        $.ajax({
            type: "GET",
            traditional: true,
            async: false,
            cache: false,
            url: url,
            data: { regTypeId: regtypeId, regClassId: regClassId },
            context: document.body,
            success: function (result) {
                $('#lblRegPrice').text(result.txt);
                $('#lblRegPrice').prop('data-val', result.val);
                calculateTotal();
            },
            error: function (xhr) {
            }
        });
    }

    function retriveAccPrice() {
        var accId = $('#AccId').val();
        var occId = $('#OccId').val();
        var url = "@Url.Content("~/Conference/GetAccPrice")";
        $.ajax({
            type: "GET",
            traditional: true,
            async: false,
            cache: false,
            url: url,
            data: { AccTypeId: accId, OccId: occId },
            context: document.body,
            success: function (result) {
                $('#lblAccPrice').text(result.txt);
                $('#lblAccPrice').prop('data-val', result.val);
                calculateTotal();
            },
            error: function (xhr) {
            }
        });
    }
    function getAccompanyPrice() {
        var accompanyId = $('#accompanyPrices').val();
        var url = "@Url.Content("~/Conference/getAccompanyPrice")";
        $.ajax({
            type: "GET",
            traditional: true,
            async: false,
            cache: false,
            url: url,
            data: { accompanyId: accompanyId },
            context: document.body,
            success: function (result) {
                $('#lblAccompanyPrice').text(result.txt);
                $('#lblAccompanyPrice').prop('data-val', result.val);
                calculateTotal();
            },
            error: function (xhr) {
            }
        });
    }

    //$.validator.unobtrusive.adapters.addBool("MustBeTrueAttribute", "required");

    $.validator.unobtrusive.adapters.add("checkboxtrue", function (options) {
        if (options.element.tagName.toUpperCase() == "INPUT" && options.element.type.toUpperCase() == "CHECKBOX") {
            options.rules["required"] = true;
            if (options.message) {
                options.messages["required"] = options.message;
            }
        }
    });

    $.validator.unobtrusive.adapters.add('filesize', ['maxsize'], function (options) {
        options.rules['filesize'] = options.params;
        if (options.message) {
            options.messages['filesize'] = options.message;
        }
    });

</script>
