@model EventManagement.DataModels.PurchaseDTO

@{
    ViewBag.Title = "registration";
    Layout = "~/Views/Shared/_ConferenceLayout.cshtml";
}
<div class="NotHome">
    <h2>Registration</h2>

    @using (Html.BeginForm("test", "conference"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="registration">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-12">
                <div class="col-md-5">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email" } })
                            @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Organization, new { htmlAttributes = new { @class = "form-control", @placeholder = "Organization/ Institute" } })
                            @Html.ValidationMessageFor(model => model.Organization, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.DropDownList("Country", new SelectList(@ViewBag.Countries, "Id", "Name"), new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @placeholder = "Billing Address" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div id="regpricingdiv" class="col-md-12">
                <div class="col-12" style="padding:20px">
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RegTypeId, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.DropDownList("RegTypeId", new SelectList(@ViewBag.Reglst, "Id", "Name"), new { @class = "form-control", @onchange = "retriveRegPrice()" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.RegClassId, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.DropDownList("RegClassId", new SelectList(@ViewBag.regclasslst, "Id", "Name"), new { @class = "form-control", @onchange = "retriveRegPrice()" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label id="lblRegPrice"></label>
                        </div>
                    </div>
                </div>
                <div class="col-12" style="padding:20px">
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AccId, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.DropDownList("AccId", new SelectList(@ViewBag.acclst, "Id", "Name"), new { @class = "form-control", @onchange = "retriveAccPrice()" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.OccId, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.DropDownList("OccId", new SelectList(@ViewBag.occlst, "Id", "Name"), new { @class = "form-control", @onchange = "retriveAccPrice()" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label id="lblAccPrice"></label>
                        </div>
                    </div>
                </div>
                <div class="col-12" style="padding:20px">
                    <div class="col-md-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AccompanyId, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-6">
                                @Html.DropDownList("accompanyPrices", new SelectList(@ViewBag.AccompanyPrices, "Id", "Name"), new { data_val = Model.Amount, @class = "form-control", @onchange = "getAccompanyPrice()" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-5">
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label id="lblAccompanyPrice"></label>
                        </div>
                    </div>
                </div>
                <div class="col-12" style="padding:20px">
                    <div class="col-md-5">
                        <div class="form-group">
                            <label>Total Price</label>
                        </div>
                    </div>
                    <div class="col-md-5">
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label id="lblTotalPrice"></label>
                        </div>
                    </div>
                </div>
            </div>

            @*<div class="col-12 col-md-12 col-sm-12 prices">
                    @Html.EditorFor(m => m.Reg)
                </div>

                <div class="col-12 col-md-12 col-sm-12 prices">
                    @Html.EditorFor(m => m.acc)
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Register" class="btn btn-default" />
                </div>
            </div>
        </div>

    }
</div>
<script type="text/JavaScript">
    $(document).ready(function () {
        retriveRegPrice();
        retriveAccPrice();
        getAccompanyPrice();
    });

    function retriveRegPrice() {
        var regtypeId = $('#RegTypeId').val();
        var regClassId = $('#RegClassId').val();
        var url = "@Url.Content("~/Conference/GetRegPrice")";
        $.ajax({
            type: "GET",
            traditional: true,
            async: false,
            cache: false,
            url: url,
            data: { regTypeId: regtypeId, regClassId: regClassId },
            context: document.body,
            success: function (result) {
                $('#lblRegPrice').text(result.txt);
                $('#lblRegPrice').prop('data-val', result.val);
                calculateTotal();
            },
            error: function (xhr) {
            }
        });
    }

    function retriveAccPrice() {
        var accId = $('#AccId').val();
        var occId = $('#OccId').val();
        var url = "@Url.Content("~/Conference/GetAccPrice")";
        $.ajax({
            type: "GET",
            traditional: true,
            async: false,
            cache: false,
            url: url,
            data: { AccTypeId: accId, OccId: occId },
            context: document.body,
            success: function (result) {
                $('#lblAccPrice').text(result.txt);
                $('#lblAccPrice').prop('data-val', result.val);
                calculateTotal();
            },
            error: function (xhr) {
            }
        });
    }
    function getAccompanyPrice() {
        var accompanyId = $('#accompanyPrices').val();
        var url = "@Url.Content("~/Conference/getAccompanyPrice")";
        $.ajax({
            type: "GET",
            traditional: true,
            async: false,
            cache: false,
            url: url,
            data: { accompanyId: accompanyId },
            context: document.body,
            success: function (result) {
                $('#lblAccompanyPrice').text(result.txt);
                $('#lblAccompanyPrice').prop('data-val', result.val);
                calculateTotal();
            },
            error: function (xhr) {
            }
        });
    }
    function calculateTotal() {
        var accPrice = parseInt($('#lblAccPrice').prop('data-val'));
        var accompanyprice = parseInt($('#lblAccompanyPrice').prop('data-val'));
        var regprice = parseInt($('#lblRegPrice').prop('data-val'));
        var res = accPrice + accompanyprice + regprice
        var total = { val: res, txt: "$" + res };
        $('#lblTotalPrice').text(total.txt);
        $('#lblTotalPrice').prop('data-val', total.amt);
    }
</script>
