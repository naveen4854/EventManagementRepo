@model EventManagement.DataModels.AbstractSubmitDTO

@using (Html.BeginForm("SubmitAbstract", "Conference", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" style="padding:20px">
        <div class="col-12">
            <div class="col-md-11"><h2>Submit Abstract</h2></div>
            <div class="col-md-1 pointer">
                <i class="fa fa-window-close" id="modalClose" aria-hidden="true"></i>
            </div>
        </div>

        <div>
            <div class="col-12">
                <hr />
                @Html.HiddenFor(model => model.ConferenceId, new { Value = @ViewData["ConferenceId"] })
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownList("Title", new SelectList(@ViewBag.Titles, "Id", "Name"), new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SubmittedBy, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.SubmittedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SubmittedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Organisation, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Organisation, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Organisation, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Telephone, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Telephone, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Telephone, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownList("Country", new SelectList(@ViewBag.Countries, "Id", "Name"), new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Track, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownList("Track", new SelectList(@ViewBag.Tracks, "Id", "Name"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.Category, new SelectList(@ViewBag.Categories, "Id", "Name"), new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DocUpload, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.TextBoxFor(m => m.DocUpload, new { type = "file" })
                        @*<input type="file" id="upFiles" class="btn btn-default" />*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Submit" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script>

    function postAbstract() {
        var data = new FormData();
        var files = $("#upFiles").prop("files");
        data.append("DocUpload", files[0]);

        data.append("conferenceId", @ViewData["ConferenceId"]);
        data.append("title", $("#Title").val());
        data.append("submittedBy", $("#SubmittedBy").val());
        data.append("emailId", $("#EmailId").val());
        data.append("telephone", $("#telephone").val());
        data.append("organisation", $("#Organisation").val());
        data.append("country", $("#Country").val());
        data.append("track", $("#Track").val());
        data.append("category", $("#Category").val());

        $.ajax({
            type: 'POST',
            contentType: false,
            processData: false,
            url: "/Conference/Submit",
            data: data,
            success: function (returnPayload) {
                console && console.log("request succeeded");
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console && console.log("request failed");
            },
        });

        //$("#submit").click(function() {
        //    $.post($("#form").attr("action"), $("#form").serialize(), function(html) {
        //        $("div.result").html(html);
        //    });
        //    return false; // prevent normal submit
        //});
    }
    
    $('#modalClose').click(function () {
        $('.modal').modal('hide');
    });
</script>

