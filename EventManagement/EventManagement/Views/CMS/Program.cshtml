@model EventManagement.DataModels.ProgramDTO

@{
    ViewBag.Title = "Program";
    Layout = "~/Views/Shared/Layouts/_CMSLayout.cshtml";
}

<p>
    @Html.ActionLink("Create New", "NewProgram")
</p>
<p>
    @Html.ActionLink("All Programs", "AllPrograms", new { confid = Model.ConferenceId })
</p>
<h2>Program</h2>

@using (Html.BeginForm("UpdateProgram", "CMS", new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)

    <div class="form-horizontal" style="padding:20px">
        <div class="form-group">
            @Html.LabelFor(model => model.ConferenceId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ConferenceId, new SelectList(@ViewBag.Conferences, "Id", "Name"), new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Info, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Info, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Info, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.ProgramDt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProgramDt, new { htmlAttributes = new { @class = "form-control datepicker", autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.ProgramDt, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.TextBoxFor(model => model.ImageUpload, new { @type = "file" })
            @*@Html.ValidationMessageFor(model => model.ImagesUpload, "", new { @class = "text-danger" })*@
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Upload" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">

       $('.datepicker').datepicker(); //Initialise any date pickers

</script>
